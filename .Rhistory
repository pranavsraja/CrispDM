country_summary
head(country_summary,5)
ggplot(head(country_summary, 5), aes(x = reorder(detected_country, n), y = n)) +
geom_col(fill = "skyblue") +
geom_text(aes(label = n), hjust = -0.2) +
labs(title = "Top 5 Countries", x = "Country", y = "Count") +
theme_minimal() +
coord_flip()
gender_summary_1 <- extracted_data_1 |> count(gender, run_cycle) |>
arrange(desc(n)) |> filter(across(everything(), ~. != "Unknown")) |> mutate(percent = round(n/sum(n)*100, 1))
gender_summary_1
gender_summary_2 <- extracted_data_2 |> count(gender, run_cycle) |>
arrange(desc(n)) |> filter(across(everything(), ~. != "Unknown")) |> mutate(percent = round(n/sum(n)*100, 1))
gender_summary_2
gender_summary_3 <- extracted_data_3 |> count(gender, run_cycle) |>
arrange(desc(n)) |> filter(across(everything(), ~. != "Unknown")) |> mutate(percent = round(n/sum(n)*100, 1))
gender_summary_3
gender_summary_4 <- extracted_data_4 |> count(gender, run_cycle) |>
arrange(desc(n)) |> filter(across(everything(), ~. != "Unknown")) |> mutate(percent = round(n/sum(n)*100, 1))
gender_summary_4
gender_summary_5 <- extracted_data_5 |> count(gender, run_cycle) |>
arrange(desc(n)) |> filter(across(everything(), ~. != "Unknown")) |> mutate(percent = round(n/sum(n)*100, 1))
gender_summary_5
gender_summary_6 <- extracted_data_6 |> count(gender, run_cycle) |>
arrange(desc(n)) |> filter(across(everything(), ~. != "Unknown")) |> mutate(percent = round(n/sum(n)*100, 1))
gender_summary_6
gender_summary_7 <- extracted_data_7 |> count(gender, run_cycle) |>
arrange(desc(n)) |> filter(across(everything(), ~. != "Unknown")) |> mutate(percent = round(n/sum(n)*100, 1))
gender_summary_7
each_gender_summary <- bind_rows(gender_summary_1, gender_summary_2, gender_summary_3, gender_summary_4,
gender_summary_5, gender_summary_6, gender_summary_7)
View(each_gender_summary)
ggplot(each_gender_summary, aes(x = gender, y = percent, fill = run_cycle)) +
geom_col(position = "stack") +
geom_text(
aes(label = paste0(round(percent, 1), "%")),  # Display percentage label
position = position_stack(vjust = 0.5),
color = "white",
size = 2
) +
labs(
title = "Percentage Distribution of Gender by Run Cycle",
x = "Gender",
y = "Percentage",
fill = "Run Cycle"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
#gender summary for all 7 runs
gender_summary <- master_extracted_data |> count(gender) |> filter(across(everything(), ~. != "Unknown")) |>
mutate(percent = round(n/sum(n)*100, 1)) |> arrange(desc(n))
gender_summary
clean_master_gender <- master_extracted_data |> filter(gender != "Unknown")
View(clean_master_gender)
ggplot(gender_summary, aes(x = gender, y = n, fill = gender)) +
geom_col() +
geom_text(
aes(label = paste0(percent, "%")),
vjust = -0.5,
size = 3
) +
labs(
title = "Distribution of Gender in total",
x = "Gender",
y = "Count"
) +
theme_minimal() +
theme(legend.position = "none")
age_summary_1 <- extracted_data_1 |> count(age_range, run_cycle) |>
arrange(desc(n)) |> filter(across(everything(), ~. != "Unknown")) |> mutate(percent = round(n/sum(n)*100, 1))
age_summary_1
age_summary_2 <- extracted_data_2 |> count(age_range, run_cycle) |>
arrange(desc(n)) |> filter(across(everything(), ~. != "Unknown")) |> mutate(percent = round(n/sum(n)*100, 1))
age_summary_2
age_summary_3 <- extracted_data_3 |> count(age_range, run_cycle) |>
arrange(desc(n)) |> filter(across(everything(), ~. != "Unknown")) |> mutate(percent = round(n/sum(n)*100, 1))
age_summary_3
age_summary_4 <- extracted_data_4 |> count(age_range, run_cycle) |>
arrange(desc(n)) |> filter(across(everything(), ~. != "Unknown")) |> mutate(percent = round(n/sum(n)*100, 1))
age_summary_4
age_summary_5 <- extracted_data_5 |> count(age_range, run_cycle) |>
arrange(desc(n)) |> filter(across(everything(), ~. != "Unknown")) |> mutate(percent = round(n/sum(n)*100, 1))
age_summary_5
age_summary_6 <- extracted_data_6 |> count(age_range, run_cycle) |>
arrange(desc(n)) |> filter(across(everything(), ~. != "Unknown")) |> mutate(percent = round(n/sum(n)*100, 1))
age_summary_6
age_summary_7 <- extracted_data_7 |> count(age_range, run_cycle) |>
arrange(desc(n)) |> filter(across(everything(), ~. != "Unknown")) |> mutate(percent = round(n/sum(n)*100, 1))
age_summary_7
each_age_summary <- bind_rows(age_summary_1, age_summary_2, age_summary_3, age_summary_4,
age_summary_5, age_summary_6, age_summary_7)
View(each_age_summary)
ggplot(each_age_summary, aes(x = age_range, y = percent, fill = run_cycle)) +
geom_col(position = "stack") +
geom_text(
aes(label = paste0(round(percent, 1), "%")),  # Display percentage label
position = position_stack(vjust = 0.5),
color = "white",
size = 2
) +
labs(
title = "Percentage Distribution of age_range by Run Cycle",
x = "Age Range",
y = "Percentage",
fill = "Run Cycle"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
#age category summary
age_summary <- master_extracted_data |>
count(age_range) |> arrange(age_range) |> arrange(desc(n)) |>
filter(across(everything(), ~. != "Unknown")) |> mutate(percent = round(n/sum(n)*100, 1))
age_summary
ggplot(age_summary, aes(x = age_range, y = n, fill = age_range)) +
geom_col() +
geom_text(
aes(label = paste0(percent, "%")),
vjust = -0.5,
size = 3
) +
labs(
title = "Distribution of age range in total",
x = "age range",
y = "Count"
) +
theme_minimal() +
theme(legend.position = "none")
employment_status_summary_1 <- extracted_data_1 |> count(employment_status, run_cycle) |>
arrange(desc(n)) |> filter(across(everything(), ~. != "Unknown")) |> mutate(percent = round(n/sum(n)*100, 1))
employment_status_summary_1
employment_status_summary_2 <- extracted_data_2 |> count(employment_status, run_cycle) |>
arrange(desc(n)) |> filter(across(everything(), ~. != "Unknown")) |> mutate(percent = round(n/sum(n)*100, 1))
employment_status_summary_2
employment_status_summary_3 <- extracted_data_3 |> count(employment_status, run_cycle) |>
arrange(desc(n)) |> filter(across(everything(), ~. != "Unknown")) |> mutate(percent = round(n/sum(n)*100, 1))
employment_status_summary_3
employment_status_summary_4 <- extracted_data_4 |> count(employment_status, run_cycle) |>
arrange(desc(n)) |> filter(across(everything(), ~. != "Unknown")) |> mutate(percent = round(n/sum(n)*100, 1))
employment_status_summary_4
employment_status_summary_5 <- extracted_data_5 |> count(employment_status, run_cycle) |>
arrange(desc(n)) |> filter(across(everything(), ~. != "Unknown")) |> mutate(percent = round(n/sum(n)*100, 1))
employment_status_summary_5
employment_status_summary_6 <- extracted_data_6 |> count(employment_status, run_cycle) |>
arrange(desc(n)) |> filter(across(everything(), ~. != "Unknown")) |> mutate(percent = round(n/sum(n)*100, 1))
employment_status_summary_6
employment_status_summary_7<- extracted_data_7 |> count(employment_status, run_cycle) |>
arrange(desc(n)) |> filter(across(everything(), ~. != "Unknown")) |> mutate(percent = round(n/sum(n)*100, 1))
employment_status_summary_7
each_employment_status_summary <- bind_rows(employment_status_summary_1, employment_status_summary_2, employment_status_summary_3, employment_status_summary_4,
employment_status_summary_5, employment_status_summary_6, employment_status_summary_7)
View(each_employment_status_summary)
ggplot(each_employment_status_summary, aes(x = employment_status , y = percent, fill = run_cycle)) +
geom_col(position = "stack") +
geom_text(
aes(label = paste0(round(percent, 1), "%")),  # Display percentage label
position = position_stack(vjust = 0.5),
color = "white",
size = 2
) +
labs(
title = "Percentage Distribution of employment status by Run Cycle",
x = "employment status",
y = "Percentage",
fill = "Run Cycle"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
#employment status summary
employment_status_summary <- master_extracted_data |>
count(employment_status) |> arrange(desc(n)) |>
filter(across(everything(), ~. != "Unknown")) |> mutate(percent = round(n/sum(n)*100, 1))
employment_status_summary
ggplot(employment_status_summary, aes(x = employment_status, y = n, fill = employment_status)) +
geom_col() +
geom_text(
aes(label = paste0(percent, "%")),
vjust = -0.5,
size = 3
) +
labs(
title = "Distribution of employment status in total",
x = "employment status",
y = "Count"
) +
theme_minimal() +
theme(legend.position = "none")
employment_area_summary_1 <- extracted_data_1 |> count(employment_area, run_cycle) |>
arrange(desc(n)) |> filter(across(everything(), ~. != "Unknown")) |> mutate(percent = round(n/sum(n)*100, 1))
employment_area_summary_1
employment_area_summary_2 <- extracted_data_2 |> count(employment_area, run_cycle) |>
arrange(desc(n)) |> filter(across(everything(), ~. != "Unknown")) |> mutate(percent = round(n/sum(n)*100, 1))
employment_area_summary_2
employment_area_summary_3 <- extracted_data_3 |> count(employment_area, run_cycle) |>
arrange(desc(n)) |> filter(across(everything(), ~. != "Unknown")) |> mutate(percent = round(n/sum(n)*100, 1))
employment_area_summary_3
employment_area_summary_4 <- extracted_data_4 |> count(employment_area, run_cycle) |>
arrange(desc(n)) |> filter(across(everything(), ~. != "Unknown")) |> mutate(percent = round(n/sum(n)*100, 1))
employment_area_summary_4
employment_area_summary_5 <- extracted_data_5|> count(employment_area, run_cycle) |>
arrange(desc(n)) |> filter(across(everything(), ~. != "Unknown")) |> mutate(percent = round(n/sum(n)*100, 1))
employment_area_summary_5
employment_area_summary_6<- extracted_data_6 |> count(employment_area, run_cycle) |>
arrange(desc(n)) |> filter(across(everything(), ~. != "Unknown")) |> mutate(percent = round(n/sum(n)*100, 1))
employment_area_summary_6
employment_area_summary_7 <- extracted_data_7 |> count(employment_area, run_cycle) |>
arrange(desc(n)) |> filter(across(everything(), ~. != "Unknown")) |> mutate(percent = round(n/sum(n)*100, 1))
employment_area_summary_7
each_employment_area_summary <- bind_rows(employment_area_summary_1, employment_area_summary_2, employment_area_summary_3, employment_area_summary_4,
employment_area_summary_5, employment_area_summary_6, employment_area_summary_7)
View(each_employment_area_summary)
ggplot(each_employment_area_summary, aes(x = employment_area , y = percent, fill = run_cycle)) +
geom_col(position = "stack") +
geom_text(
aes(label = paste0(round(percent, 1), "%")),  # Display percentage label
position = position_stack(vjust = 0.5),
color = "white",
size = 2
) +
labs(
title = "Percentage Distribution of employment area by Run Cycle",
x = "employment area",
y = "Percentage",
fill = "Run Cycle"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
#employment area overall runs summary
employment_area_summary <- master_extracted_data |> count(employment_area) |> arrange(desc(n)) |>
filter(across(everything(), ~. != "Unknown")) |> mutate(percent = round(n/sum(n)*100, 1))
print(employment_area_summary, n=22)
ggplot(employment_area_summary, aes(x = employment_area, y = n, fill = employment_area)) +
geom_col() +
geom_text(
aes(label = paste0(percent, "%")),
vjust = -0.5,
size = 3
) +
labs(
title = "Distribution of employment area in total",
x = "employment area",
y = "Count"
) +
theme_minimal() +
theme(legend.position = "none")
highest_education_level_summary_1 <- extracted_data_1 |> count(highest_education_level, run_cycle) |>
arrange(desc(n)) |> filter(across(everything(), ~. != "Unknown")) |> mutate(percent = round(n/sum(n)*100, 1))
highest_education_level_summary_1
highest_education_level_summary_2 <- extracted_data_2 |> count(highest_education_level, run_cycle) |>
arrange(desc(n)) |> filter(across(everything(), ~. != "Unknown")) |> mutate(percent = round(n/sum(n)*100, 1))
highest_education_level_summary_2
highest_education_level_summary_3 <- extracted_data_3 |> count(highest_education_level, run_cycle) |>
arrange(desc(n)) |> filter(across(everything(), ~. != "Unknown")) |> mutate(percent = round(n/sum(n)*100, 1))
highest_education_level_summary_3
highest_education_level_summary_4 <- extracted_data_4 |> count(highest_education_level, run_cycle) |>
arrange(desc(n)) |> filter(across(everything(), ~. != "Unknown")) |> mutate(percent = round(n/sum(n)*100, 1))
highest_education_level_summary_4
highest_education_level_summary_5 <- extracted_data_5 |> count(highest_education_level, run_cycle) |>
arrange(desc(n)) |> filter(across(everything(), ~. != "Unknown")) |> mutate(percent = round(n/sum(n)*100, 1))
highest_education_level_summary_5
highest_education_level_summary_6 <- extracted_data_6 |> count(highest_education_level, run_cycle) |>
arrange(desc(n)) |> filter(across(everything(), ~. != "Unknown")) |> mutate(percent = round(n/sum(n)*100, 1))
highest_education_level_summary_6
highest_education_level_summary_7 <- extracted_data_7 |> count(highest_education_level, run_cycle) |>
arrange(desc(n)) |> filter(across(everything(), ~. != "Unknown")) |> mutate(percent = round(n/sum(n)*100, 1))
highest_education_level_summary_7
each_highest_education_level_summary <- bind_rows(highest_education_level_summary_1, highest_education_level_summary_2, highest_education_level_summary_3, highest_education_level_summary_4,
highest_education_level_summary_5, highest_education_level_summary_6, highest_education_level_summary_7)
View(each_highest_education_level_summary)
ggplot(each_highest_education_level_summary, aes(x = highest_education_level , y = percent, fill = run_cycle)) +
geom_col(position = "stack") +
geom_text(
aes(label = paste0(round(percent, 1), "%")),  # Display percentage label
position = position_stack(vjust = 0.5),
color = "white",
size = 2
) +
labs(
title = "Percentage Distribution of highest education level by Run Cycle",
x = "employment area",
y = "Percentage",
fill = "Run Cycle"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
#highest education level summary
highest_education_level_summary <- master_extracted_data |> count(highest_education_level) |>
arrange(desc(n)) |> filter(across(everything(), ~. != "Unknown")) |> mutate(percent = round(n/sum(n)*100, 1))
highest_education_level_summary
ggplot(highest_education_level_summary, aes(x = highest_education_level, y = n, fill = highest_education_level)) +
geom_col() +
geom_text(
aes(label = paste0(percent, "%")),
vjust = -0.5,
size = 3
) +
labs(
title = "Distribution of highest education level in total",
x = "education level",
y = "Count"
) +
theme_minimal() +
theme(legend.position = "none")
#archetype summary
archetype_summary <- master_arche_extracted_data |> count(archetype) |>
arrange(desc(n))
archetype_summary
ggplot(master_arche_extracted_data, aes(x = archetype, fill = run_cycle)) +
geom_bar(position = "dodge") +
geom_text(stat = "count",
aes(label = after_stat(count)),
position = position_dodge(width = 0.9),
vjust = -0.5) +
labs(
title = "Archetype distribution Across Run Cycles",
x = "Run Cycle",
y = "Count",
fill = "archetype"
) +
theme_minimal()
participation_rate <- master_extracted_data |>
summarise(
total_enrolled = sum(!is.na(enrolled_at)),
total_participated = sum(!is.na(fully_participated_at)),
percentage = round((total_participated/total_enrolled * 100), 1)
)
participation_rate
# % of people who purchased the course across all the 7 runs
purchase_rate <- master_extracted_data |>
summarise(
total_enrolled = sum(!is.na(enrolled_at)),
total_purchased = sum(!is.na(purchased_statement_at)),
percentage = round((total_purchased/total_enrolled * 100), 1)
)
purchase_rate
# % of people who have purchased the course out of those who have completed it
effective_rate <- master_extracted_data |>
summarise(
total_completed = sum(!is.na(fully_participated_at)),
total_purchased = sum(!is.na(purchased_statement_at)),
percentage = round((total_purchased/total_completed * 100), 1)
)
effective_rate
ggplot(master_extracted_data %>%
filter(employment_status != "Unknown",
!is.na(fully_participated_at),
fully_participated_at != "") %>%
group_by(employment_status) %>%
summarise(count = n()), aes(x = employment_status, y = count)) +
geom_line(group = 1) +
geom_point() +
labs(
title = "Count of Fully Participated by Employment Status",
x = "Employment Status",
y = "Count"
) +
theme_minimal()
############## Employment_status VS Purchase ###########
ggplot(master_extracted_data %>%
filter(employment_status != "Unknown",
!is.na(purchased_statement_at),
purchased_statement_at != "") %>%
group_by(employment_status) %>%
summarise(count = n()), aes(x = employment_status, y = count)) +
geom_line(group = 1) +
geom_point() +
labs(
title = "Count of Fully Participated by Employment Status",
x = "Employment Status",
y = "Count"
) +
theme_minimal()
############ purchase VS age_range ######
ggplot(master_extracted_data %>%
filter(age_range != "Unknown",
!is.na(purchased_statement_at),
purchased_statement_at != "") %>%
group_by(age_range) %>%
summarise(count = n()), aes(x = age_range, y = count)) +
geom_line(group = 1) +
geom_point() +
labs(
title = "Count of Purchased by age range",
x = "age range",
y = "Count"
) +
theme_minimal()
########### Full_part VS age_range ######
ggplot(master_extracted_data %>%
filter(age_range != "Unknown",
!is.na(fully_participated_at),
fully_participated_at != "") %>%
group_by(age_range) %>%
summarise(count = n()), aes(x = age_range, y = count)) +
geom_line(group = 1) +
geom_point() +
labs(
title = "Count of Fully Participated by age_range",
x = "age_range",
y = "Count"
) +
theme_minimal()
extracted_master_lev_response$leaving_reason_numeric <- as.numeric(as.factor(extracted_master_lev_response$leaving_reason))
# Calculate correlation
correlation <- cor(extracted_master_lev_response$leaving_reason_numeric, extracted_master_lev_response$last_completed_step, use = "complete.obs")
print(correlation)
ggplot(extracted_master_lev_response, aes(x = leaving_reason_numeric, y = last_completed_step)) +
geom_point(alpha = 0.6) +       # Plot points with slight transparency
geom_smooth(method = "lm", se = FALSE, color = "blue") +  # Add a trend line (linear model)
labs(
title = "Correlation between Leaving Reason and Last Completed Step",
x = "Leaving Reason (Numeric Encoding)",
y = "Last Completed Step"
) +
theme_minimal()
ggplot(head(country_summary, 5), aes(x = reorder(detected_country, n), y = n)) +
geom_col() +
geom_text(
aes(label = paste0(percent, "%")),
vjust = -0.5,
size = 3
) +
labs(
title = "Top 5 Countries",
x = "Gender",
y = "Count"
) +
theme_minimal() +
theme(legend.position = "none")
country_summary <- master_extracted_data |> count(detected_country) |>
arrange(desc(n)) |> mutate(percent = round(n/sum(n)*100, 1))
country_summary
head(country_summary,5)
country_summary <- master_extracted_data |> count(detected_country) |>
filter(across(everything(), ~. != "--")) |>
arrange(desc(n)) |> mutate(percent = round(n/sum(n)*100, 1))
country_summary
head(country_summary,5)
ggplot(head(country_summary, 5), aes(x = reorder(detected_country, n), y = n)) +
geom_col() +
geom_text(
aes(label = paste0(percent, "%")),
vjust = -0.5,
size = 3
) +
labs(
title = "Top 5 Countries",
x = "Gender",
y = "Count"
) +
theme_minimal() +
theme(legend.position = "none")
ggplot(head(country_summary, 5), aes(x = reorder(detected_country, n), y = n)) +
geom_col(fill = "skyblue") +
geom_text(
aes(label = paste0(percent, "%")),
vjust = -0.5,
size = 3
) +
labs(
title = "Top 5 Countries",
x = "Gender",
y = "Count"
) +
theme_minimal() +
theme(legend.position = "none")
ggplot(head(country_summary, 5), aes(x = reorder(detected_country, n), y = n)) +
geom_col(fill = "skyblue") +
geom_text(
aes(label = paste0(percent, "%")),
vjust = -0.5,
size = 3
) +
labs(
title = "Top 5 Countries",
x = "Gender",
y = "Count"
) +
theme_minimal() +
theme(legend.position = "none") +  coord_flip()
ggplot(each_country_summary, aes(x = detected_country, y = n, fill = run_cycle)) +
geom_col(position = "stack") +
geom_text(
aes(label = n),
position = position_stack(vjust = 0.5),
color = "white",
size = 2
) +
labs(
title = "Count of Detected Country by Run Cycle",
x = "Detected Country",
y = "Count",
fill = "Run Cycle"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(each_country_summary, aes(x = detected_country, y = n, fill = run_cycle)) +
geom_col(position = "stack") +
geom_text(
aes(label = n),
position = position_stack(vjust = 0.5),
color = "white",
size = 2
) +
labs(
title = "Count of people from top 5 countries in each run",
x = "Detected Country",
y = "Count",
fill = "Run Cycle"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggsave(filename = "Count of people from top 5 countries in each run.png")
